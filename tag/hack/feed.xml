<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <author>Nikos Roussos</author>
  <title>nikos.roussos &bull; hack</title>
  
    <entry>
      <title>speed up firefox (reloaded)</title>
      <link href="https://www.roussos.cc/2010/06/23/speed-up-firefox-reloaded/"/>
      <content type="html"><p>I've posted before about<a href="/2009/04/23/speed-firefox/"> this little hack on speeding up firefox</a>. The key is that you actually <strong>move the entire .mozilla folder from disk to memory</strong>. First you have to mount /tmp to memory (some linux distributions may do this by default) adding this line to /etc/fstab and rebooting:</p>
<p><code>none /tmp tmpfs size=512M,nr_inodes=200k,mode=01777 0 0</code></p>
<p>Then it's safe to do:</p>
<pre><code>cp -R /home/user/.mozilla /home/user/.mozilla_save
mv /home/user/.mozilla /tmp/mozilla
ln -s /tmp/mozilla /home/user/.mozilla
</code></pre>
<p>I updated the script so I can use it as a system init script:</p>
<pre><code>#!/bin/bash

start() {
    mkdir -p /tmp/mozilla
    rsync -avi --delete /home/user/.mozilla_save/ /home/user/.mozilla/
}

stop() {
    size=`du -xs /home/user/.mozilla/ | awk '{print $1}'`
    digits=`expr length $size`
    if [ $digits -gt 4 ]; then
        rsync -avi --delete /home/user/.mozilla/ /home/user/.mozilla_save/
    else
        echo 'no!'
        exit 0
    fi
}

case "$1" in
start)
     start
     ;;
stop)
     stop
     ;;
*)
     echo $"Usage: $0 {start|stop}"
     exit 1;;
esac
</code></pre>
<p>So I placed this script at /etc/init.d/, made it executable and created a link inside /etc/rc.5/</p>
<p><code>ln -s /etc/init.d/ffsync.sh /etc/rc5.d/S99ffsync</code></p>
<p>rc5 because the default runlevel on Fedora is 5. You can see yours from /etc/inittab. So every time my system boots the above script runs with the start option (executing the start function) and every time it halts/reboots it runs with the stop option (stop function). In order to be sure that no data loss will occur in the unlikely event of sudden shutdown, I have a cronjob that saves the mozilla folder every 15 minutes.</p>
<p><code>*/15 * * * * /etc/init.d/ffsync.sh stop</code></p>
<p>Trust me. With the above hack you'll see <strong>a significant difference on firefox's speed</strong>. Especially if you're you using <a href="http://blog.mozilla.com/blog/2008/04/21/a-little-something-awesome-about-firefox-3/">firefox's awesome address bar</a> to search through your browser's history.</p></content>
      <pubDate>2010-06-23 14:30:06</pubDate>
    </entry>
  
    <entry>
      <title>vim as a password manager</title>
      <link href="https://www.roussos.cc/2009/07/12/vim-as-a-password-manager/"/>
      <content type="html"><p>this is a small post for the technique i 'm currently using to save my passwords, implemented on vim. i added these two lines at my ~/.vimrc file: </p>
<pre><code>map &lt;F12&gt; &lt;Esc&gt;:%!gpg --decrypt 2&gt;/dev/null&lt;CR&gt;&lt;CR&gt;&lt;C-l&gt;
map &lt;S-F12&gt; &lt;Esc&gt;:%!gpg --encrypt --armor --recipient mymail@mail.com&lt;CR&gt;&lt;CR&gt;&lt;C-l&gt;
</code></pre>
<p>these settings map two shortcuts (f12 and shift+f12) that encrypt and decrypt a plain text file respectively using gpg. it is importand to note that the file isÂ  stored on disk only in the encrypted state. so the decrypted state of the file never touches the disk (paranoid exception: there is always the possibility that the memory space holding the file is on swap). so no special password manager software needed. no extra master passphrase. just my gpg one.</p></content>
      <pubDate>2009-07-12 14:21:16</pubDate>
    </entry>
  
    <entry>
      <title>speed up firefox</title>
      <link href="https://www.roussos.cc/2009/04/23/speed-firefox/"/>
      <content type="html"><p>firefox 3 features <a href="http://support.mozilla.com/en-US/kb/Smart+Location+Bar">an awesome address</a> bar that helps you search through your history (and bookmarks) by just typing a word or phrase that's part of either the url or the title. the problem is that if you keep the browsing history for a long time (lime me) the address bar search process becomes very slow. a cool solution is to place the ~/.mozilla folder on ram (which is a lot faster than disk). i already have /tmp on ram, so i made a symbolic link ~/.mozilla pointing to /tmp/mozilla. and then i use the script below in order to save/restore the contents of mozilla folder: </p>
<pre><code>#!/bin/bash

if [ $# -lt 1 ]; then
    echo "usage: ff_sync.sh save/restore"
    exit 0
fi

action=$1

if [ "$action" = "save" ]; then
    size=`du -xs /home/user/.mozilla/ | awk '{print $1}'`
    digits=`expr length $size`
    if [ $digits -gt 4 ]; then
        rsync -avi --delete /home/user/.mozilla/ /home/user/.mozilla_save/
    else
        echo 'no!'
        exit 0
    fi
fi

if [ "$action" = "restore" ]; then
    mkdir -p /tmp/mozilla\
    rsync -avi --delete /home/user/.mozilla_save/ /home/user/.mozilla/
fi
</code></pre>
<p>all i have to do is run this script with the appropriate option when booting/halting the pc. on gentoo you have /etc/conf.d/local.start and /etc/conf.d/local.stop for this kind of things. and i have to say that i'm really impressed. firefox speed  improved amazingly. and i mean firefox overall speed, not just the address bar ;)</p></content>
      <pubDate>2009-04-23 11:48:38</pubDate>
    </entry>
  
</feed>