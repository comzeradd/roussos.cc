<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <author>Nikos Roussos</author>
  <title>nikos.roussos - fedora</title>
  <link href="https://www.roussos.cc/feed.xml" rel="self" />
  <link href="https://www.roussos.cc/" />
  <updated>2016-01-18T11:54:41Z</updated>
  
    <entry>
      <title>Fedora Flock 2014</title>
      <link href="https://www.roussos.cc/2014/08/13/fedora-flock-2014/"/>
      <content type="html">
        <![CDATA[
          <p><a href="http://www.flocktofedora.com/">Fedora Flock</a> took place last week and this is a log entry for my personal highlights.</p>
<p><a href="https://www.flickr.com/photos/comzeradd/14671187430" title="Flock 2014 by Nikos Roussos, on Flickr"><img src="https://farm6.staticflickr.com/5575/14671187430_7c5c5ef531_m.jpg" class="txt" width="180" height="240" alt="Flock 2014"></a> Overall the Flock was awesome. The quality of all technical presentations/workshops was really high. It's amazing how many things currently going on at the Fedora community, not just related to our Operation System (the distribution) but also innovative things that we develop or lead that in the long run benefit the whole Free Software community. As always I had the chance to meet, talk and collaborate in person with many Fedorians and that's always motivating for my contribution to the project.</p>
<p>So here it goes...</p>
<p><a href="https://fedoraproject.org/wiki/Fedora.next">Fedora.next</a>: This is currently the most important thing happening regarding the distribution. We are about to release Fedora 21 in three different products (Workstation, Cloud, Server) that will make possible to offer a better user experience in each one of these user groups. Some features that pop into my mind: Server product will implement "Server roles" right on the Anaconda installer, so you can quickly deploy (for instance) a mail server. <a href="http://cockpit-project.org/">Cockpit</a> also will land on 21, an awesome server management tool. Cloud product will focus even more on containers (yes that means docker), open source infrastructure (eg. <a href="http://www.openstack.org/">OpenStack</a>) and cloud services (eg. AWS). Workstation product intended for Desktop users and will focus on developers and makers. <a href="http://devassistant.org/">DevAsistant</a> will play a key role to this. It always surprise me to see developers struggle to setup their work environment on Operating Systems that takes hours to do it, for things that it's a few minutes work on Fedora.</p>
<blockquote class="twitter-tweet" lang="en"><p>People running <a href="https://twitter.com/hashtag/Docker?src=hash">#Docker</a> inside <a href="https://twitter.com/hashtag/Vagrant?src=hash">#Vagrant</a> over OsX. A new level of masochism.</p>&mdash; Nikos Roussos (@comzeradd) <a href="https://twitter.com/comzeradd/statuses/468398793894133760">May 19, 2014</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>Docker, docker, docker: <a href="https://twitter.com/adityapatawari">Aditya</a> did a great introductory workshop during Flock. Fedora is definitely the leading platform for Docker. Next release will improve even better Docker's integration.</p>
<p>Ansible: Another DepOps area where Fedora community has given a lot of time and effort. Again Aditya did an introductory talk, since recently the Infrastructure team migrated <a href="http://infrastructure.fedoraproject.org/cgit/ansible.git">everything</a> from Puppet to Ansbile. The last day <a href="https://twitter.com/kumar_pravin">Praveen</a> did a workshop demonstrating in practice how Ansible can be combined with Jenkins for Continuous Integration.</p>
<p>Packaging: One way that I contribute to the project is through RPM Packaging, so I tried to participate in most of the relevant talks/workshops. Amita Sharma walked us through the Fedora QA workflow, Jan Zeleny presented the roadmap for RPM and Dnf (the yum replacement), Haïkel Guémar coordinated a review package hackfest and Cole Robinson showed how packagers can utilize Virtualization tools for testing things.</p>
<p>Communications: New communication and collaboration tools are on the way. This is not directly related to the project, but it's Fedora people who drive the development on these. <a href="https://fedorahosted.org/hyperkitty/">Hyperkitty</a> will be the web interface for the upcoming Mailman3, <a href="https://www.waartaa.com/">Waarta</a> is a web app for IRC/WebRTC and <a href="http://www.glittergallery.net/">Glitter Gallery</a> is a collaboration platform for designers which uses git as backend and SparkleShare as the sync client (I maintain the package for Fedora, so I'm really interested to see how this will go).</p>
<p>Novena: <a href="https://twitter.com/xobs">Sean Cross</a> gave a keynote speech about the <a href="http://www.kosagi.com/w/index.php?title=Novena_Main_Page">Novena</a> project, the fully Open Source laptop. Still in the beginning, but seems really promising.</p>
<p class="text-center">
<iframe src="https://www.flickr.com/photos/comzeradd/14842603975/in/set-72157645862758620/player/" width="500" height="383" frameborder="0" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>
</p>
        ]]>
      </content>
      <published>2014-08-13 15:51:54</published>
    </entry>
  
    <entry>
      <title>Setup a home server with Fedora and BeagleBone Black</title>
      <link href="https://www.roussos.cc/2014/06/23/fedora-beaglebone-black/"/>
      <content type="html">
        <![CDATA[
          <p>Over the last <a href="http://www.roussos.cc/2014/04/30/athens-free-software-monthly-meetups/">Free Software Meetup</a> we discussed about the "build your own home server" movement. This is a long and complex discussion, so most likely it will expand to future meetups. In the meantime I wanted to test BeagleBone Black (BB), as the hardware platform for such a project.</p>
<p><img src="beagle-fedora.png" alt="fedora on beaglebone black" class="txt" /> I prefer BB over Raspeberry Pi (RaPi) because, despite what many people seem to believe, RaPi <a href="http://en.wikipedia.org/wiki/Raspberry_Pi#Driver_API">is not</a> fully Open Hardware. I also prefer armv7 hardware, since it gives me the option to use a "regular" linux distribution. I have the option for Fedora or Debian instead of Pidora or Raspbian. </p>
<p>During the meetup we talked a lot about <a href="https://arkos.io/">Arkos</a>, which supports many arm boards and seems like a great choice for administering your home server through a well designed web interface, lowering the technical knowledge threshold for setting up services like file or mail server. I'll get back to Arkos, but at this point I wanted to experiment with a "regular" distribution. So this post is about Fedora and Beaglebone Black.</p>
<p>Download the <a href="http://fedoraproject.org/en/get-fedora#arm">Fedora ARM image</a> extract it and rename it to <code>fedora-arm.raw</code> so it's easier to follow the steps bellow.</p>
<p>Flashing Fedora to BB is not that difficult. The tricky part is that Fedora comes with an "initial setup" screen, which requires an hdmi monitor and a keyboard at least on first run so you can set some basic things (like root password). I wanted to do some modifications to the Fedora image, and get through this "initial setup" screen prior to flashing it on the BB. Inspired by <a href="http://ebalaskas.gr/blog/2013/03/25/raspberry-pi-with-archlinux-under-qemu/">Ebal's post</a>, I thought Qemu as a perfect tool for this job.</p>
<pre><code>sudo yum install qemu-system-arm
</code></pre>
<p>With qemu-system-arm tool I can emulate arm and run the image on my laptop. In order to boot the image qemu needs a kernel and what better place of finding a kernel than the image itself. You can either mount the image and copy kernel and initrd out or use libguestfs (kernel and Initrd version will obviously vary on future releases).</p>
<pre><code>sudo yum install -y libguestfs-tools
virt-copy-out -a fedora-arm.raw /boot/vmlinuz-3.11.10-301.fc20.armv7hl .
virt-copy-out -a fedora-arm.raw /boot/initramfs-3.11.10-301.fc20.armv7hl.img .
</code></pre>
<p>Finally run it. (you may have to add your user to kvm group)</p>
<pre><code>sudo usermod -aG kvm username
newgrp kvm
qemu-system-arm -machine vexpress-a9 -m 1024 -nographic -net nic -net user \
 -append "console=ttyAMA0,115200n8 rw root=/dev/mmcblk0p3 rootwait physmap.enabled=0" \
 -kernel vmlinuz-3.11.10-301.fc20.armv7hl \
 -initrd initramfs-3.11.10-301.fc20.armv7hl.img \
 -sd fedora-arm.raw
</code></pre>
<p>Booting up I reached to the "initial setup" screen I mentioned before. I created a new user with administrator (aka sudo) privileges. First things I did when finally got a prompt was to disable root account:</p>
<pre><code>sudo passwd -l root
</code></pre>
<p>set a hostname</p>
<pre><code>vi /etc/sysconfig/network
</code></pre>
<p>disable Network Manger</p>
<pre><code>systemctl disable NetworkManager.service
</code></pre>
<p>setup static networking</p>
<pre><code>echo "
 HWADDR="D8:D3:85:AE:DD:4C"
 BOOTPROTO="static"
 DEVICE="eth0"
 ONBOOT="yes"
 IPADDR=192.168.1.2
 NETMASK=255.255.255.0
 BROADCAST=192.168.1.255
 NETWORK=192.168.1.0
 GATEWAY=192.168.1.1
"&gt;/etc/sysconfig/network-scripts
</code></pre>
<p>add DNS settings</p>
<pre><code>echo "
 nameserver 208.67.222.222
 nameserver 208.67.222.222
"&gt;/etc/resolv.conf
</code></pre>
<p>disable selinux (<a href="http://stopdisablingselinux.com/">sorry Dan</a>)</p>
<pre><code>setenforce 0
sed -i s/=enforcing/=disabled/ /etc/selinux/config
</code></pre>
<p>Enable ssh</p>
<pre><code>systemctl enable sshd
firewall-cmd --permanent --zone=public --add-service=ssh
</code></pre>
<p>Fedora image is around 2G. I had a 4G SDcard so I expanded it by 2G</p>
<pre><code>qemu-img resize fedora-arm.raw +2G
</code></pre>
<p>Important to remember that this will expand the image but not the root filesystem inside. Flash it to an SDcard</p>
<pre><code>dd if=fedora-arm.raw of=/dev/sdX
</code></pre>
<p>This a destructive command so make sure that sdX refers to your SDcard and not some disk. Now mount the card and resize the root filesystem, that probably would be on sdX3</p>
<pre><code>e2fsck -f /dev/sdX3
resize2fs /dev/sdX3
</code></pre>
<p>And that's all. I removed the mini sd from the adapter and inserted it on BB. All that's left is ethernet connection and power. Less than a minute later I was able to ssh to my soon-to-be home server from my laptop.</p>
        ]]>
      </content>
      <published>2014-06-23 13:13:52</published>
    </entry>
  
</feed>